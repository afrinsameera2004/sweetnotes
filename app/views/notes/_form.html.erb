
<%= form_with(model: note, local: true, html: { multipart: true, data: { turbo: false } }, class: "bg-white p-6 rounded-xl shadow-lg space-y-6 max-w-2xl mx-auto") do |form| %>
  <% if note.errors.any? %>
    <div class="bg-red-50 text-red-700 border border-red-300 px-4 py-3 rounded-lg shadow-sm">
      <h2 class="font-semibold mb-2">
        <%= pluralize(note.errors.count, "error") %> prohibited this note from being saved:
      </h2>
      <ul class="list-disc ml-6 space-y-1 text-sm">
        <% note.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Title -->
  <div>
    <%= form.label :title, class: "block text-sm font-medium text-gray-700" %>
    <%= form.text_field :title, class: [
        "mt-1 block w-full rounded-md border px-3 py-2 shadow-sm focus:ring-pink-500 focus:border-pink-500",
        note.errors[:title].any? ? "border-red-400" : "border-gray-300"
      ].join(" ") %>
  </div>

  <!-- Content -->
  <div>
    <%= form.label :content, class: "block text-sm font-medium text-gray-700" %>
    <%= form.cktext_area :content, class: [
        "mt-1 block w-full rounded-md border px-3 py-2 shadow-sm focus:ring-pink-500 focus:border-pink-500 h-60",
        note.errors[:content].any? ? "border-red-400" : "border-gray-300"
      ].join(" ") %>
    <div id="word-count-message" class="text-sm text-gray-500 mt-1"></div>
  </div>

  <!-- CKEditor Word Count Script -->
  <script>
    document.addEventListener("turbo:load", () => {
      const wordMsg = document.getElementById("word-count-message");
      const maxWords = 150;

      const editorEl = document.querySelector("textarea[name='note[content]']");
      if (editorEl && window.CKEDITOR) {
        CKEDITOR.replace(editorEl, {
          customConfig: "/ckeditor/config.js"
        });

        CKEDITOR.instances[editorEl.id].on("change", function () {
          const data = CKEDITOR.instances[editorEl.id].getData();
          const text = data.replace(/<[^>]*>/g, '').trim();
          const count = text.split(/\s+/).filter(w => w.length > 0).length;
          wordMsg.textContent = `${count} / ${maxWords}`;
          if (count > maxWords) {
            wordMsg.classList.add("text-red-500", "font-semibold");
          } else {
            wordMsg.classList.remove("text-red-500", "font-semibold");
          }
        });
      }
    });
  </script>

  <!-- Important Checkbox -->
  <div class="flex items-center">
    <%= form.check_box :important, {}, true, false %>
    <%= form.label :important, "Mark as Important", class: "ml-2 text-sm text-gray-700 font-medium" %>
  </div>

  <!-- File Upload -->
  <div>
    <%= form.label :files, "Attachments", class: "block text-sm font-medium text-gray-700 mb-1" %>

    <div class="flex items-center gap-3">
      <%= form.file_field :files, multiple: true, direct_upload: true, class: "hidden", id: "file_input" %>

      <button type="button" id="trigger_file_upload"
        class="inline-flex items-center px-4 py-2 bg-pink-500 text-white rounded-md hover:bg-pink-600 shadow">
        ðŸ“Ž Choose files
      </button>
    </div>

    <p id="file_names" class="mt-2 text-sm text-gray-500 italic"></p>
  </div>

  <script>
    document.addEventListener("turbo:load", () => {
      const input = document.getElementById("file_input");
      const trigger = document.getElementById("trigger_file_upload");
      const fileNames = document.getElementById("file_names");

      if (input && trigger && fileNames) {
        trigger.addEventListener("click", () => input.click());

        input.addEventListener("change", () => {
          const names = Array.from(input.files).map(f => f.name).join(", ");
          fileNames.textContent = names || "No files chosen";
        });
      }
    });
  </script>

  <!-- Tags -->
  <div>
    <%= form.label :tags, "Tags (comma separated)", class: "block text-sm font-medium text-gray-700" %>
    <%= form.text_field :tags, value: note.tags, class: "mt-1 block w-full rounded-md border-gray-300 px-3 py-2 shadow-sm focus:ring-pink-500 focus:border-pink-500" %>
  </div>

  <!-- Priority -->
  <div>
    <%= form.label :priority, class: "block text-sm font-medium text-gray-700" %>
    <%= form.select :priority, ["Low", "Medium", "High"], prompt: "Select Priority",
        class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 focus:ring-pink-500 focus:border-pink-500" %>
  </div>

  <!-- Submit -->
  <div class="pt-2">
    <%= form.submit "Save", class: "w-full sm:w-auto rounded-md px-5 py-2.5 bg-pink-500 hover:bg-pink-600 text-white font-semibold shadow transition" %>
  </div>
<% end %>
